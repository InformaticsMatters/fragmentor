# Dockerfile to build the controller (playbook runner) image.
# this is an image that contains the Ansible playbooks
# and all the requirements to run them.
#
# The container runs as root.

FROM python:3.12.6-bookworm
LABEL maintainer="Tim Dudgeon<tdudgeon@informaticsmatters.com>"
ARG NF_VERSION=20.10.0
ARG KUBECTL_VERSION=1.23.16

USER root

# Force the binary layer of the stdout and stderr streams
# to be unbuffered
ENV PYTHONUNBUFFERED=1

# Install Java (required by nextflow)
RUN apt-get update -y && \
    apt-get install -y \
        default-jdk

# Install nextflow
# and run a nextflow command to force it to pull down dependent code...
RUN wget -qO- https://get.nextflow.io | bash && \
    chmod 755 nextflow && \
    mv nextflow /usr/local/bin && \
    nextflow -version
# And create the 'home' directory.
# If we don't do this now nextflow won't be able to write to the directory
# if we rely on the directory being created once the config's mapped in.
WORKDIR ${HOME}/.nextflow

# Install kubectl
RUN apt-get install -y \
        apt-transport-https \
        curl \
        gnupg2 && \
    curl -LO https://dl.k8s.io/release/v${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

# A file for the kubernetes config.
# This will be mapped into the container via a Kubernetes ConfigMap
# as '~/.kube/config' and copied to '~/kubeconfig' as the container starts.
# This is required because configmaps are mounted read-only and you
# get...
#   error: open /root/.kube/config.lock: read-only file system
# ...when using kubectl.
ENV KUBECONFIG=${HOME}/kubeconfig

# Install PSQL (for the psql command).
# See https://www.postgresql.org/download/linux/debian/
# At last attempt this installed 12.5
RUN apt-get install -y \
        lsb-release && \
    sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
    wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - && \
    apt-get update -y && \
    apt-get install -y \
        postgresql-12 && \
    /usr/local/bin/python -m pip install --upgrade pip

# - copy requirements in
# - install requirements
COPY requirements.txt /root/
RUN pip install -r /root/requirements.txt

COPY docker-player-entrypoint.sh /root/
COPY ansible/ /root/ansible/

RUN chmod 755 /root/*.sh && \
    chown -R root:root /root

WORKDIR /root

CMD ["./docker-player-entrypoint.sh"]
