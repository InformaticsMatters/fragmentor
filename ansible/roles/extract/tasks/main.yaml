---

# Check that required command line parameters have been set:
# - deployment
# - Parameter file file containing vendor and version has been included.
#
#   ansible-playbook site-standardise \
#     -e @parameters \
#     -e deployment=development|production
#

- name: Assert user-variable definitions
  assert:
    that:
    - deployment|string|length > 0
    - deployment|string != 'SetMe'
    - "{{ extracts[0].lib.vendor|string != 'SetMe'}}"
    fail_msg: You must provide a 'deployment', and a list of vendors in a parameter file to extract.

- name: List input vendors
  debug:
     msg: "{{ item.lib }}"
  loop: "{{ extracts }}"

# We need AWS credentials

- name: Check credentials
  assert:
    that:
    - aws_access_key|string|length > 0
    - aws_secret_key|string|length > 0
    fail_msg: You must provide AWS credentias so that I can save the data
  when: save_extract|bool

- block:

  - import_tasks: initialise.yaml

  - include_tasks: build-index.yaml
    loop: "{{ extracts }}"
    loop_control:
       index_var: vendor_index

  - import_tasks: neo4j-extract-index.yaml
  - import_tasks: neo4j-extract.yaml

  module_defaults:
    postgresql_query:
      login_host: "{{ database[deployment].login_host }}"
      port: "{{ database[deployment].port }}"
      db: "{{ database[deployment].db }}"
      login_user: "{{ database[deployment].login_user }}"
      login_password: "{{ database[deployment].login_password }}"
    postgresql_copy:
      login_host: "{{ database[deployment].login_host }}"
      port: "{{ database[deployment].port }}"
      db: "{{ database[deployment].db }}"
      login_user: "{{ database[deployment].login_user }}"
      login_password: "{{ database[deployment].login_password }}"

- import_tasks: neo4j-save.yaml
  delegate_to: "{{ groups['dbservers'][0] }}"
  become: yes
  when: save_extract|bool
