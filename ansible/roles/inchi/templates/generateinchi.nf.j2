/*
 * Generate inchi keys Nextflow process
 * Purpose: Generate keys across a cluster.
 *
 * Author | Date    | Version
 * Duncan | 05/2020 | Initial version.
 * Alan   | 12/2024 | Convert to DSL 2
 *
 */

nextflow.enable.dsl=2

params.input = 'run/fragemnt/inchi.csv'
params.chunk_size = 15000
params.out_dir = '.'
params.outputfile = 'inchi.tab'
params.non_standard = '-n'
params.standard = ''
params.nodefile = ''


/* Nextflow will not accept a "-" in a variable from ansible */
if (params.standard != '') {
    STAN = "-" + params.standard
} else {
    STAN = ''
}

if (params.nodefile != '') {
    NODE = "-" + params.nodefile
} else {
    NODE = ''
}

files = Channel.from(file(params.input))
    .splitText(by: params.chunk_size, file: 'chunk_')

process generate_mols {

{% if nextflow_container_registry %}
    container '{{ nextflow_container_registry }}/{{ nextflow_container_name }}:{{ nextflow_container_tag }}'
{% else %}
    container '{{ nextflow_container_name }}:{{ nextflow_container_tag }}'
{% endif %}
    errorStrategy = 'retry'
    maxErrors = 3

    input:
    file chunks

    output:
    path 'chunk_*.tab'

    """
    python -m frag.network.scripts.generate_inchi -i $chunks -o inchitab.tab ${params.non_standard} $STAN $NODE
    cp inchitab.tab ${chunks}_inchitab.tab
    """

}

// workflow definitions
workflow generate {

    take:
    file files

    main:
    generate_mols(files) | collectFile(name: "${params.outputfile}", storeDir: "${params.out_dir}", keepHeader: true)

}

workflow {
    generate(files)
}
