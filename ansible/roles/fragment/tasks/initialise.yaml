---

# Check run path
- name: Ensure runpath is present
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - "{{ runpath }}"

# Install the required modules to be able to synchronise with S3 and use ansible python modules
- name: Install requirements
  pip:
    name:
    - python-dateutil==2.8.1
    - boto3==1.12.49
    - psycopg2-binary==2.8.5
  become: yes
  when: deployment=="production"

- name: Install requirements
  pip:
    name:
    - python-dateutil==2.8.1
    - boto3==1.12.49
    - psycopg2-binary==2.8.5
  when: deployment=="development"

- name: Retrieve source_id
  postgresql_query:
    query: select max(id) from source where name = '{{ vendor }}' and version = '{{ version }}';
    autocommit: no
  register: query_result

- debug:
    var: query_result

- name: Set source_id
  set_fact:
    source_id: "{{ query_result.query_result[0].max }}"

- name: Display source_id
  debug:
    var: source_id

# Optionally erase and then create the fragmentation directory...

- name: Erase fragment path
  file:
    path: "{{ fragpath }}/fragment"
    state: absent
  when: clean_start|bool

- name: Create fragment path
  file:
    path: "{{ fragpath }}/fragment"
    state: directory

- name: Ensure sql, nextflow directories are present
  file:
    path: "{{ item }}"
    state: directory
  loop:
  - "{{ reppath }}/sql"
  - "{{ reppath }}/nextflow"

- name: Variable sanity-check
  assert:
    that:
    - "{{ vendors[vendor].fraghac|int }} > 0"
    - "{{ vendors[vendor].fragminhac|int }} >= 0"
    - "{{ vendors[vendor].fragmaxfrags|int }} > 0"
    - "{{ vendors[vendor].fraglimit|int }} >= 0"
