---

- name: Variable sanity-check
  assert:
    that:
    - fragchunksize|int > 0
    - fraghac|int > 0
    - fragmaxfrags|int > 0

- name: Check inputfile present
  stat:
    path: "{{ fragpath }}/fragment/{{ fragsmifile }}"
  register: fragsmifile_result

- name: Assert fragsmifile
  assert:
    that:
    - fragsmifile_result.stat.exists

# Move the nextflow workflow and config into place (from templates)
# so they move from "<templates>/{{ deployment }}" to "{{ reppath }}/nextflow"...

- name: Translate nextflow files
  template:
    src: "{{ item }}"
    dest: "{{ reppath }}/nextflow/{{ item|regex_replace(deployment + '/')|regex_replace('.j2') }}"
  loop:
  - "fragmentation.nf.j2"
  - "{{ deployment }}/nextflow.config.j2"

- name: Set nextflow command
  set_fact:
    nextflow_cmd: >-
      nextflow run -c {{ reppath }}/nextflow/nextflow.config
       {{ reppath }}/nextflow/fragmentation.nf
       -with-report {{ fragpath }}/fragment/frag_report.html
       -with-tower
       --input {{ fragpath }}/fragment/{{ fragsmifile }}
       --out_dir {{ fragpath }}/fragment
       --tmp_dir {{ fragpath }}/fragment
       --chunk_size {{ fragchunksize }}
       --max_hac {{ fraghac }}
       --max_frag {{ fragmaxfrags }}


#time nextflow run -c $REPPATH/nextflow/nextflow.config $REPPATH/nextflow/fragmentation.nf -with-report $FRAGPATH/fragment/frag_report.html -with-tower\
#    --input $FRAGDATA/fragment/$FRAGSMIFILE --out_dir $FRAGPATH/fragment --tmp_dir $FRAGPATH/fragment --chunk_size $FRAGCHUNKSIZE --max_hac $FRAGHAC --max_frag $FRAGMAXFRAGS $@

- name: Display nextflow command
  debug:
    var: nextflow_cmd

- name: Run nextflow (async)
  command: "{{ nextflow_cmd }}"
  async: "{{ nextflow_timeout_minutes|int * 60 }}"
  poll: 0
  register: nextflow_async

- name: Wait for nextflow (async)
  async_status:
    jid: "{{ nextflow_async.ansible_job_id }}"
  register: nextflow_result
  until: nextflow_result.finished
  delay: 30
  retries: "{{ (nextflow_timeout_minutes|int / nextflow_poll_period_minutes|int)|int }}"
