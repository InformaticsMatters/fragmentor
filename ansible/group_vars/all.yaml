---

# Variables shared with all roles

# The deployment type.
# This is used to select material based on whether
# we're launching plays for: -
# - development
# - production
#
# The deployment value should be an entry in the database map (see below)
deployment: SetMe

# Erase any files/content generated in a prior run?
# If set to yes this tends to remove temporary data directories,
# it does not erase or adjust databases or tables -
# it's simply about a clean 'disk'.
clean_start: yes

# The tag of the fragmentation container,
# used for a number of nextflow workflows.
nextflow_container_tag: molport-04

# The process id is the commit id of the fragmentation container,
# Used in the extract file
process_id: Fragmentor-56c9593

# Database credentials.
# A map of variables based on deployment target.
#
# Caution:  Ensure that the 'production.copy_directory' matches what's
#           used in 'db_devices.pg_copy.mount_path'
#           (see 'roles/configure/defaults/main.yaml')
database:
  development:
    login_host: localhost
    port: 5432
    db: mydatabase
    login_user: postgres
    login_password: 1234
    copy_directory: /var/lib/postgresql/data
    db_user_account: postgres
  production:
    login_host: 130.246.214.154
    port: 5432
    db: fairmolecules
    login_user: fragmentor
    login_password: bullfinch
    copy_directory: /pgcopy
    db_user_account: fragmentor

# Hardware sizing - used to calculate size of chunks in standardization/fragmentation.
# A map of variables based on deployment target.
hardware:
  development:
# Number of CPUs available for nextflow parallel jobs.
    parallel_jobs: 8
# Number of connections to postgres - note that this should be less than max_worker_processes in start-database.yaml.
    postgres_jobs: 6
  production:
    parallel_jobs: 500
    postgres_jobs: 18

# Vendor defaults.
# A map of defaults based on the vendor and library.
vendors:
  xchem_dsip:
    # Used for sizing timeouts and processing parameters
    approx_vendor_molecules: 800
    # Total time (in minutes) across all CPUs - Used for sizing timeouts and processing parameters
    est_total_fragmentation_time: 10
    # Minimum heavy atom count for extraction/fragmentation processing
    fragminhac: 0
    # Maximum heavy atom count for extraction/fragmentation processing
    fraghac: 36
    # Maximum frag cycles for fragmentation processing
    fragmaxfrags: 12
    # Limit for partial fragmentation processing (not operational)
    fraglimit: 0
    # Extract Playbook: Chunk of molecules to be processed before insert to index
    # This is a sensitive value - settings for each vendor should be tuned.
    # So the values below are set based on the number of edges per mol_source value
    # and validated by testing.
    indexchunksize: 100
    # Total time (in minutes) to build index (will be divided by number of postgres_jobs)
    index_build_time: 10
  xchem_spot:
    approx_vendor_molecules: 96
    est_total_fragmentation_time: 10
    fragminhac: 0
    fraghac: 36
    fragmaxfrags: 12
    fraglimit: 0
    indexchunksize: 100
    index_build_time: 10
  xchem_probe:
    approx_vendor_molecules: 239
    est_total_fragmentation_time: 10
    fragminhac: 0
    fraghac: 36
    fragmaxfrags: 12
    fraglimit: 0
    indexchunksize: 100
    index_build_time: 10
  chemspace_bb:
    approx_vendor_molecules: 18000000
    est_total_fragmentation_time: 7500
    fragminhac: 0
    fraghac: 36
    fragmaxfrags: 12
    fraglimit: 0
    indexchunksize: 2000
    index_build_time: 480
  molport:
    approx_vendor_molecules: 8000000
    est_total_fragmentation_time: 360000
    fragminhac: 0
    fraghac: 36
    fragmaxfrags: 12
    fraglimit: 0
    indexchunksize: 300
    index_build_time: 2160
  enamine_ro5:
    approx_vendor_molecules: 40000000
    est_total_fragmentation_time: 720000
    fragminhac: 0
    fraghac: 36
    fragmaxfrags: 12
    fraglimit: 0
    indexchunksize: 300
    index_build_time: 17280

# The tag of the fragmentation container,
neo4j_graph_version: 2019-12-18.2
